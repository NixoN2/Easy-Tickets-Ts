{"version":3,"sources":["components/Header/github.svg","store.tsx","components/Header/Header.tsx","components/FileParser/FileParser.tsx","components/Ticket/Ticket.tsx","components/TicketList/TicketList.tsx","components/Modal/Modal.tsx","App.tsx","index.tsx"],"names":["TicketListState","atom","key","default","id","title","tickets","ListsState","JSON","parse","localStorage","getItem","PdfState","showState","pagesState","infoValue","selector","get","total","length","completed","filter","ticket","Header","useRecoilState","lists","setTicketList","listsNames","map","list","className","defaultValue","onChange","e","i","target","value","disabled","hidden","listName","idx","href","src","github","alt","FileParser","ticketsList","useState","ticketListTickets","setTicketListTickets","pdf","setPdf","setLists","listTitle","setTitle","txtFile","setTxtFile","type","placeholder","htmlFor","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","preventDefault","reader","FileReader","onload","txtInfo","result","split","forEach","ticketInfo","ticketPages","ticketPagesParsed","ticketPage","push","Number","range","range1","range2","parsedTicket","match","slice","join","pages","files","Blob","readAsText","a","readAsDataURL","onClick","concat","v4","setItem","stringify","document","getElementById","Ticket","ticketList","setShow","setPages","useSetRecoilState","onCheck","TicketList","info","useRecoilValue","pdfjs","GlobalWorkerOptions","workerSrc","Modal","show","zoom","setZoom","visible","clientY","clientX","file","options","el","index","pageNumber","scale","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.a96005d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.c1c26463.svg\";","import { atom, selector } from 'recoil';\r\n\r\nexport interface Ticket{\r\n    id?: string;\r\n    title: string;\r\n    completed: boolean;\r\n    pages: Array<number>;\r\n}\r\n\r\nexport interface TicketList{\r\n    id: string;\r\n    title: string;\r\n    tickets: Ticket[];\r\n}\r\n\r\nexport const TicketListState = atom({\r\n    key: \"ticketList\",\r\n    default: {id: '',title: '', tickets: [] as Ticket[]},\r\n});\r\n\r\nexport const ListsState = atom({\r\n    key: \"Lists\",\r\n    default: JSON.parse(localStorage.getItem('lists') as string) === null ? [] : [...JSON.parse(localStorage.getItem('lists') as string)] as TicketList[],\r\n})\r\n\r\nexport const PdfState = atom({\r\n    key: \"Pdf\",\r\n    default: '',\r\n})\r\n\r\nexport const showState = atom({\r\n    key: \"Show\",\r\n    default: false\r\n})\r\n\r\nexport const pagesState = atom({\r\n    key: \"Pages\",\r\n    default: [] as number[]\r\n})\r\n\r\nexport const infoValue = selector({\r\n    key: \"infoValue\",\r\n    get: ({get}) => ({\r\n        total: get(TicketListState).tickets.length,\r\n        completed: get(TicketListState).tickets.filter((ticket) => ticket.completed).length\r\n    })\r\n})\r\n","import React, { FC } from 'react';\r\nimport github from './github.svg';\r\nimport { TicketListState, ListsState, TicketList }  from '../../store';\r\nimport { useSetRecoilState, useRecoilState } from 'recoil';\r\n\r\nconst Header: FC = () => {\r\n    const [lists,setLists] = useRecoilState(ListsState);\r\n    // console.log(lists);\r\n    // if (lists === []){\r\n    //     const savedLists: string | null = localStorage.getItem('lists');\r\n    //     console.log(savedLists)\r\n    //     if (savedLists !== null){\r\n    //         setLists(JSON.parse(savedLists));\r\n    //     }\r\n    // } else{\r\n\r\n    // }\r\n    const [ticketList,setTicketList] = useRecoilState(TicketListState);\r\n    const listsNames = lists.map((list: TicketList) => {\r\n        return list.title;\r\n    });\r\n    const selectOnChange = (e: any)=>{\r\n        for (let i = 0; i < lists.length; ++i){\r\n            if (e.target.value === lists[i].title){\r\n                setTicketList(lists[i]);\r\n            }\r\n        }\r\n    }\r\n    // if (ticketList.title === ''){\r\n    //     if (lists.length > 0 && (document.getElementById('list-name') as HTMLInputElement).value !== 'default'){\r\n    //         setTicketList(lists[0]);\r\n    //     }\r\n    // }\r\n    return (\r\n        <div className=\"bg-haiti w-screen h-20 flex justify-between\">\r\n            <h1 className=\"text-french-mauve text-5xl mt-4 ml-5 font-serif\">Easy Tickets</h1>\r\n            <select id=\"list-name\" defaultValue=\"default\" onChange={selectOnChange} className=\"mt-5 mr-10 focus:outline-none  w-96 h-10 text-lg font-serif text-valhalla rounded-md pl-2 bg-french-mauve\">\r\n                    <option key=\"default-option\" disabled value=\"default\" hidden>Выберите список</option>\r\n                    {listsNames ? listsNames.map((listName,idx) => <option className=\"text-lg font-serif text-valhalla\" key={`${listName}-${idx}}`}>{listName}</option>) : null}\r\n            </select>\r\n            <a href=\"https://github.com/NixoN2\"><img className=\"mt-2 mr-16 w-16 h-16\" src={github} alt=\"github\"></img></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { FC, useState } from \"react\";\r\nimport { Ticket, TicketList, TicketListState, PdfState, ListsState }  from '../../store';\r\nimport { useSetRecoilState, useRecoilState } from 'recoil';\r\nimport { v4 } from 'uuid';\r\n// TO DO: REFACTOR THE CODE\r\nconst FileParser: FC = () => {\r\n    const [ticketsList,setTicketList] = useRecoilState(TicketListState);\r\n    const [ticketListTickets, setTicketListTickets] = useState<Ticket[]>([]);\r\n    const [pdf,setPdf] = useRecoilState(PdfState);\r\n    const [lists,setLists] = useRecoilState(ListsState);\r\n    const [listTitle, setTitle] = useState('');\r\n    const [txtFile, setTxtFile] = useState(false);\r\n    const txtOnChange = (e: any) : void => {\r\n        e.preventDefault();\r\n        const reader: FileReader = new FileReader();\r\n        reader.onload = (e: any) => {\r\n            setTxtFile(true);\r\n            const txtInfo = e.target.result.split(';');\r\n            let ticketListTickets: Ticket[] = [];\r\n            txtInfo.forEach((ticket: string) => {\r\n                const ticketInfo: string[]= ticket.split('|')[0].split(' ');\r\n                const ticketPages: string[] = ticket.split('|')[1].split(',');\r\n                let ticketPagesParsed: number[] = [];\r\n                ticketPages.forEach((ticketPage: string) => {\r\n                    if (ticketPage.split('-').length === 1){\r\n                        ticketPagesParsed.push(Number(ticketPage));\r\n                    }\r\n                    else{\r\n                        const range: string[] = ticketPage.split('-');\r\n                        const range1: number = Number(range[0]);\r\n                        const range2: number = Number(range[1]);\r\n                        for (let i: number = range1; i <= range2; ++i){\r\n                            ticketPagesParsed.push(i);\r\n                        }\r\n                    }\r\n                })\r\n                const parsedTicket: Ticket = {\r\n                    id: ticketInfo[0].match(/\\d+/g)![0],\r\n                    title: ticketInfo.slice(1).join(' '),\r\n                    completed: false,\r\n                    pages: ticketPagesParsed\r\n                }\r\n                ticketListTickets.push(parsedTicket);\r\n            })\r\n            setTicketListTickets(ticketListTickets);\r\n            // setTicketList({title: listTitle, tickets: ticketList.tickets});\r\n\r\n        }\r\n        if (e.target.files[0] instanceof Blob){\r\n            reader.readAsText(e.target.files[0],'windows-1251');\r\n        }\r\n    }\r\n    const pdfOnChange = (e: any) : void => {\r\n        e.preventDefault()\r\n        const reader = new FileReader();\r\n        reader.onload = async(e: any) => {\r\n            setPdf(e.target.result);\r\n        }\r\n        if (e.target.files[0] instanceof Blob){\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    }\r\n    const titleOnChange = (e: any) => {\r\n        setTitle(e.target.value);\r\n    }\r\n    const addTicketList = (e: any) => {\r\n        e.preventDefault();\r\n        if (listTitle !== '' && ticketsList.tickets !== []){\r\n            // setTicketList({id: ticketsList.id, title: listTitle, tickets: ticketListTickets})\r\n            setLists(lists.concat({id: v4(), title: listTitle, tickets: ticketListTickets}));\r\n            localStorage.setItem('lists',JSON.stringify(lists.concat({id: v4(), title: listTitle, tickets: ticketListTickets})));\r\n            (document.getElementById('name') as HTMLInputElement).value = '';\r\n            (document.getElementById('txt') as HTMLInputElement).value = '';\r\n            (document.getElementById('pdf') as HTMLInputElement).value = '';\r\n            setTxtFile(false);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <input onChange={titleOnChange} className=\"focus:outline-none  bg-french-mauve ml-5 mt-5 w-96 h-9 pl-2 text-lg font-serif rounded-lg text-valhalla placeholder-valhalla placeholder-opacity-85\" type=\"text\" placeholder=\"Введите название списка:\" id=\"name\"/>\r\n            \r\n            { txtFile ? <label className=\"bg-french-mauve ml-3 rounded-xl text-valhalla text-lg text-center cursor-pointer hover:border-pink-lavender border-2 border-french-mauve outline p-1.5 pl-5 pr-5\" htmlFor=\"txt\">Выберите txt-файл <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 pb-1 bg-french-mauve inline-block\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n            </svg></label> :\r\n                <label className=\"bg-french-mauve ml-3 rounded-xl text-valhalla text-lg text-center cursor-pointer hover:border-pink-lavender border-2 border-french-mauve outline p-1.5 pl-5 pr-5\" htmlFor=\"txt\">Выберите txt-файл </label>\r\n            }\r\n            <input onChange={txtOnChange} className=\"w-0 h-0\" type=\"file\" id=\"txt\"/>\r\n            {pdf === '' ? <label className=\"bg-french-mauve ml-3 rounded-xl text-valhalla text-lg text-center cursor-pointer hover:border-pink-lavender border-2 border-french-mauve p-1.5 pl-5 pr-5\" htmlFor=\"pdf\">Выберите pdf-файл</label>\r\n            :   <label htmlFor=\"pdf\" className=\"bg-french-mauve ml-3 rounded-xl text-valhalla text-lg text-center cursor-pointer hover:border-pink-lavender border-2 border-french-mauve p-1.5 pl-5 pr-5\">Выберите pdf-файл <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 pb-1 bg-french-mauve inline-block\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg></label>\r\n            }\r\n            <input onChange={pdfOnChange} className=\"w-0 h-0\" type=\"file\" id=\"pdf\"/>\r\n            <button onClick={addTicketList} className=\"focus:outline-none bg-french-mauve ml-3 rounded-xl text-valhalla text-lg text-center cursor-pointer hover:border-pink-lavender border-2 border-french-mauve h-10 w-32\">Добавить</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileParser;","import { FC } from \"react\";\r\nimport { TicketListState, pagesState } from '../../store';\r\nimport { useRecoilState, useSetRecoilState } from 'recoil';\r\nimport { showState } from '../../store';\r\ninterface TicketProps {\r\n    key: string;\r\n    id?: string;\r\n    title: string;\r\n    completed: boolean;\r\n    pages: number[];\r\n}\r\n\r\nconst Ticket: FC<TicketProps> = ({id,title,completed,pages}: TicketProps) => {\r\n    const [ticketList, setTicketList] = useRecoilState(TicketListState);\r\n    const [show,setShow] = useRecoilState(showState);\r\n    const setPages = useSetRecoilState(pagesState);\r\n    const onCheck = (e: any) => {\r\n        setTicketList({id: ticketList.id,title: ticketList.title, tickets:[...ticketList.tickets.slice(0,Number(id)-1),{id: id, title: title, completed: !completed,pages: pages}, ...ticketList.tickets.slice(Number(id))]})\r\n    }\r\n    const onOpen = (e: any) => {\r\n        setPages(pages);\r\n        setShow(true);\r\n    }\r\n    return (\r\n        <div className=\"flex mt-3 ml-5\">   \t\r\n            <p className=\"text-french-mauve text-2xl max-w-7xl\">{id}:  {title}</p>\r\n            {completed ? <button onClick={onCheck} className=\"w-5 h-5 ml-2 mt-1.5 focus:outline-none bg-french-mauve rounded-sm\"></button> : <button onClick={onCheck} className=\"w-5 h-5 ml-2 mt-1.5 focus:outline-none bg-white rounded-sm\"></button>} \r\n            <button onClick={onOpen} className=\"focus:outline-none bg-french-mauve ml-4 rounded-xl text-valhalla text-lg text-center cursor-pointer hover:border-pink-lavender border-2 border-french-mauve h-8 w-32\">Открыть</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Ticket;","import { TicketListState, ListsState, infoValue } from '../../store';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport Ticket from '../Ticket/Ticket';\r\nimport { v4 } from 'uuid';\r\nimport { FC } from 'react';\r\nconst TicketList : FC  = () => {\r\n    const [ticketList, setTicketList] = useRecoilState(TicketListState);\r\n    const [lists, setLists] = useRecoilState(ListsState);\r\n    const info = useRecoilValue(infoValue);\r\n    const onDelete = (e: any) => {\r\n        const id: string = ticketList.id;\r\n        for (let i = 0; i < lists.length; ++i){\r\n            if (lists[i].id === id){\r\n                setLists([...lists.slice(0,i),...lists.slice(i+1)]);\r\n                localStorage.setItem('lists',JSON.stringify([...lists.slice(0,i),...lists.slice(i+1)]));\r\n                setTicketList({id: '', title:'', tickets: []});\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"flex mb-5\">\r\n                {ticketList.title !== '' ? <h1 className=\" ml-4 mt-4 rounded-xl text-french-mauve text-2xl text-center border-2 border-french-mauve outline p-1.5 pl-10 pr-10\">{ticketList.title}</h1> : null}\r\n                {ticketList.title !== '' ? <button onClick={onDelete} className=\"focus:outline-none bg-french-mauve ml-4 mt-4 rounded-xl text-valhalla text-2xl text-center cursor-pointer hover:border-pink-lavender border-2 border-french-mauve h-12 w-40\">Удалить</button> : null}\r\n            </div>\r\n            <div>\r\n                {ticketList.title !== '' ? <p className=\"text-french-mauve text-2xl ml-4 border-2 border-french-mauve w-80 h-12 text-center pt-2 rounded-xl\">{info.completed}/{info.total} вопросов изучено</p> : null}\r\n            </div>\r\n            {ticketList.tickets.map((ticket) => <Ticket key={v4()} id={ticket.id} title={ticket.title} completed={ticket.completed} pages={ticket.pages} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TicketList;","import { useRecoilState } from 'recoil';\r\nimport { showState, pagesState, PdfState } from '../../store';\r\nimport { Document, Page, pdfjs } from 'react-pdf/dist/esm/entry.webpack';\r\nimport { useState } from 'react';\r\npdfjs.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.js';\r\nconst Modal = () => {\r\n    const [show, setShow]  = useRecoilState(showState);\r\n    const [pages,setPages] = useRecoilState(pagesState);\r\n    const [pdf, setPdf] = useRecoilState(PdfState);\r\n    const [zoom, setZoom] = useState(1.7);\r\n    const visible = show ? 'fixed top-0 left-0 w-screen h-screen block' : 'fixed top-0 left-0 w-screen h-screen hidden';\r\n    const onClose = (e: any) => {\r\n        setShow(false);\r\n    }\r\n    const onOutModalClick = (e: any) => {\r\n        if (e.clientY < 80 || e.clientY > 900 || e.clientX < 480 || e.clientX > 1440){\r\n            setShow(false);\r\n        }\r\n\r\n    }\r\n    const onPlusZoom = (e: any) => {\r\n        e.preventDefault();\r\n        setZoom(zoom + 0.1);\r\n    }\r\n    const onMinusZoom = (e:any) => {\r\n        e.preventDefault();\r\n        setZoom(zoom - 0.1);\r\n    }\r\n    return (\r\n        <div onClick={onOutModalClick} className={visible} >\r\n            <div className=\"bg-ebony bg-opacity-75 w-screen h-screen pt-20\">\r\n            <div className=\"h-20 bg-white w-3/6 mx-auto\">\r\n                <button type=\"button\" className=\"float-right mr-5 mt-5\" onClick={onClose}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-10 w-10 opacity-40\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                </button>\r\n                <div className=\"flex justify-around pt-5\">\r\n                    <div>\r\n                        <button onClick={onPlusZoom} className=\"mr-6 w-8 h-8 bg-ebony text-french-mauve text-2xl rounded-xl\">+</button>\r\n                        <button onClick={onMinusZoom} className=\"w-8 h-8 bg-ebony text-french-mauve text-2xl rounded-xl\">-</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <section className=\"bg-white w-3/6 h-5/6 overflow-auto mx-auto\">\r\n                \r\n                \r\n                {pages !== [] ? <Document\r\n                    file={pdf} \r\n                    options={{ workerSrc: \"/pdf.worker.js\" }}\r\n                    // className=\" mx-auto\"\r\n                >   \r\n        {pages.map((el, index) => {return <Page key={`page_${index+1}`} pageNumber={el} scale={zoom} />} )}\r\n                </Document> : null}\r\n            \r\n            </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import Header from './components/Header/Header';\nimport FileParser from './components/FileParser/FileParser';\nimport TicketList from './components/TicketList/TicketList';\nimport Modal from './components/Modal/Modal';\nconst App = () => {\n    \n    return(\n        <div className=\"bg-ebony w-screen h-screen overflow-x-hidden overflow-y-scroll\">\n            <Modal />\n            <Header />\n            <FileParser />\n            <TicketList />\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport './index.css';\nimport \"@material-tailwind/react/tailwind.css\";\nimport App from './App';\nReactDOM.render(\n  <RecoilRoot>\n    <App/>\n  </RecoilRoot>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}